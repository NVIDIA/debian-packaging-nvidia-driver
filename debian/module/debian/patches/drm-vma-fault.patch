Author: Luca Boccassi <luca.boccassi@gmail.com>
Description: Fix kernel module build on 4.11 and greater
 From kernel 4.11 and newer (commit 11bac800044) vm_operations_struct.fault
 does not take a vm_area_struct parameter anymore.
--- a/nvidia-drm/nvidia-drm-gem.c
+++ b/nvidia-drm/nvidia-drm-gem.c
@@ -31,6 +31,8 @@
 
 #include "nv-mm.h"
 
+#include <linux/version.h>
+
 static struct nvidia_drm_gem_object *nvidia_drm_gem_new
 (
     struct drm_file *file_priv,
@@ -511,11 +513,19 @@
  * Note that nvidia_drm_vma_fault() can be called for different or same
  * ranges of the same drm_gem_object simultaneously.
  */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
+static int nvidia_drm_vma_fault(
+#else
 static int nvidia_drm_vma_fault(struct vm_area_struct *vma,
+#endif
                                 struct vm_fault *vmf)
 {
     unsigned long address = nv_page_fault_va(vmf);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
+    struct drm_gem_object *gem = vmf->vma->vm_private_data;
+#else
     struct drm_gem_object *gem = vma->vm_private_data;
+#endif
     struct nvidia_drm_gem_object *nv_gem =
                     DRM_GEM_OBJECT_TO_NV_GEM_OBJECT(gem);
     unsigned long page_offset, pfn;
@@ -526,7 +536,11 @@
 
     page_offset = vmf->pgoff - drm_vma_node_start(&gem->vma_node);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
+    ret = vm_insert_pfn(vmf->vma, address, pfn + page_offset);
+#else
     ret = vm_insert_pfn(vma, address, pfn + page_offset);
+#endif
 
     switch (ret) {
         case 0:
