Author: Luca Boccassi <bluca@debian.org>
Description: Fix timer API calls for kernel >= 4.15
 From kernel 4.15 and newer (commit 7eeb6b893bd28c) the init_timer APIs have
 been retired and replaced by new timer_list APIs.
--- a/nv.c
+++ b/nv.c
@@ -24,6 +24,8 @@
 #include "nv-frontend.h"
 #endif
 
+#include <linux/version.h>
+
 /* 
  * The module information macros for Linux single-module builds
  * are present in nv-frontend.c.
@@ -332,7 +334,11 @@
 #else
 static irqreturn_t   nvidia_isr            (int, void *);
 #endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 15, 0)
 static void          nvidia_rc_timer       (unsigned long);
+#else
+static void          nvidia_rc_timer       (struct timer_list *t_list);
+#endif
 
 static int           nvidia_ctl_open       (struct inode *, struct file *);
 static int           nvidia_ctl_close      (struct inode *, struct file *);
@@ -1893,10 +1899,18 @@
 
 static void
 nvidia_rc_timer(
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 15, 0)
     unsigned long data
+#else
+    struct timer_list *t_list
+#endif
 )
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 15, 0)
     nv_linux_state_t *nvl = (nv_linux_state_t *) data;
+#else
+    nv_linux_state_t *nvl = from_timer(nvl, t_list, rc_timer);
+#endif
     nv_state_t *nv = NV_STATE_PTR(nvl);
 
     NV_CHECK_PCI_CONFIG_SPACE(nvl->timer_sp, nv, TRUE, TRUE, FALSE);
@@ -2406,9 +2420,13 @@
         return -1;
 
     nv_printf(NV_DBG_INFO, "NVRM: initializing rc timer\n");
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 15, 0)
     init_timer(&nvl->rc_timer);
     nvl->rc_timer.function = nvidia_rc_timer;
     nvl->rc_timer.data = (unsigned long) nvl;
+#else
+    timer_setup(&nvl->rc_timer, nvidia_rc_timer, 0);
+#endif
     nv->rc_timer_enabled = 1;
     mod_timer(&nvl->rc_timer, jiffies + HZ); /* set our timeout for 1 second */
     nv_printf(NV_DBG_INFO, "NVRM: rc timer initialized\n");
