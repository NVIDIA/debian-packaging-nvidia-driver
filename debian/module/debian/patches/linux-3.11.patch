Author: Daniel Dadap <ddadap@nvidia.com>
Description: fix module build for Linux 3.11
Origin: vendor, https://devtalk.nvidia.com/default/topic/628864/unix-graphics-announcements-and-news/num_physpages-and-support-for-3-11-and-later-kernels/

--- a/nv-linux.h
+++ b/nv-linux.h
@@ -1028,7 +1028,11 @@
 #endif
 
 #if !defined(NV_VMWARE)
+#if defined(NV_GET_NUM_PHYSPAGES_PRESENT)
+#define NV_NUM_PHYSPAGES                get_num_physpages()
+#else
 #define NV_NUM_PHYSPAGES                num_physpages
+#endif
 #define NV_GET_CURRENT_PROCESS()        current->tgid
 #define NV_IN_ATOMIC()                  in_atomic()
 #define NV_LOCAL_BH_DISABLE()           local_bh_disable()

--- kernel/nv-vm.c
+++ kernel/nv-vm.c
@@ -475,8 +475,13 @@ static unsigned int nv_compute_gfp_mask(
     system_memory_size = (os_get_system_memory_size() * RM_PAGE_SIZE);
     if (system_memory_size != 0)
     {
+#if !defined(NV_GET_NUM_PHYSPAGES_PRESENT)
         if (dev->dma_mask < (system_memory_size - 1))
             gfp_mask = NV_GFP_DMA32;
+#else
+        if (dev->dma_mask <= (system_memory_size - 1))
+            gfp_mask = NV_GFP_DMA32;
+#endif
     }
     else if (dev->dma_mask < 0xffffffffffULL)
     {
