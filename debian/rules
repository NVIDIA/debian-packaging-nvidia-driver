#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_BUILD_ARCH		?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

version			:= $(shell sh debian/upstream_info VERSION)
url_x86			:= $(shell sh debian/upstream_info URL_X86)
url_x86_64		:= $(shell sh debian/upstream_info URL_X86_64)
filename_x86		:= $(shell sh debian/upstream_info FILENAME_X86)
filename_x86_64		:= $(shell sh debian/upstream_info FILENAME_X86_64)
dirname_x86		:= $(shell sh debian/upstream_info DIRNAME_X86)
dirname_x86_64		:= $(shell sh debian/upstream_info DIRNAME_X86_64)

TEMPLATES	:= $(wildcard debian/*.in)
AUTOGEN		+= $(patsubst %.in,%,$(TEMPLATES))
AUTOGEN		+= debian/libcuda1-ia32.symbols
AUTOGEN		+= debian/nvidia-libvdpau1-ia32.symbols
AUTOGEN		+= debian/module/debian/control.template
AUTOGEN		+= debian/module/debian/changelog
AUTOKEEP	 = debian/copyright
AUTOCLEAN	 = $(filter-out $(AUTOKEEP),$(AUTOGEN))


.PHONY: autogen configure
autogen: $(AUTOGEN)
configure: autogen unpack-stamp


unpack-stamp: ${filename_x86} ${filename_x86_64}
	dh_testdir
	# extract both so we can fetch the kernel object code for both arches
	sh ${filename_x86} --extract-only
	sh ${filename_x86_64} --extract-only
	ln -s ${dirname_x86} NVIDIA-Linux-i386
	ln -s ${dirname_x86_64} NVIDIA-Linux-amd64
	ln -s NVIDIA-Linux-$(DEB_BUILD_ARCH) NVIDIA-Linux
	ls -al
	touch $@


# build kernel module source tarball
module-source-stamp: configure
	dh_testdir

	rm -rf debian/temp
	mkdir -p debian/temp/modules/nvidia-kernel/debian

	# Module source code
	cp -a NVIDIA-Linux/usr/src/nv/* debian/temp/modules/nvidia-kernel/
	cp -a NVIDIA-Linux/usr/share/doc/NVIDIA_Changelog debian/temp/modules/nvidia-kernel/

	# We don't want these makefiles that don't work with kbuild
	rm debian/temp/modules/nvidia-kernel/makefile
	rm debian/temp/modules/nvidia-kernel/Makefile.nvidia

	# We want both 32 and 64 bit versions of nv-kernel.o
	# Do not use a name matching *.o to prevent accidental deletion by some clean target
	cp -a NVIDIA-Linux-i386/usr/src/nv/nv-kernel.o debian/temp/modules/nvidia-kernel/nv-kernel.o.i386
	cp -a NVIDIA-Linux-amd64/usr/src/nv/nv-kernel.o debian/temp/modules/nvidia-kernel/nv-kernel.o.x86_64
	rm -f debian/temp/modules/nvidia-kernel/nv-kernel.o

	# Install a debian/ tree and new conftest files that work purely with kbuild
	# and don't require root into the module package
	cp -a debian/module/* debian/temp/modules/nvidia-kernel/
	cp -a debian/copyright debian/temp/modules/nvidia-kernel/debian/

	# Fix permissions
	chmod -R a-sx,u=rwX,go=rX debian/temp/modules
	chmod a+x debian/temp/modules/nvidia-kernel/debian/rules

	tar cfvj nvidia-kernel.tar.bz2 -C debian/temp --owner=root --group=src \
		--exclude '*.in' --exclude '.svn' modules
	tar tfvj nvidia-kernel.tar.bz2
	rm -rf debian/temp
	touch $@


.PHONY: binary binary-arch binary-indep build clean install
binary binary-arch binary-indep build clean install:
	dh $@

override_dh_auto_clean:
	rm -f NVIDIA-Linux NVIDIA-Linux-i386 NVIDIA-Linux-amd64
	rm -fr $(dirname_x86) $(dirname_x86_64) nvidia-kernel.tar.bz2
	rm -fr debian/temp

override_dh_clean:
	dh_clean
	rm -f $(AUTOCLEAN)
	$(MAKE) -f debian/rules $(AUTOKEEP)

override_dh_auto_configure: configure
override_dh_auto_build: module-source-stamp

override_dh_installchangelogs:
	dh_installchangelogs NVIDIA-Linux/usr/share/doc/NVIDIA_Changelog

override_dh_installinit:
	dh_installinit -- start 20 2 3 4 5 .

override_dh_gencontrol:
	dh_gencontrol -- -V'nvidia:Version=$(version)'

# Do not run dh_strip here.  The NVIDIA license says:
#
#     2.1.2 Linux/FreeBSD Exception.  Notwithstanding the foregoing terms of
#     Section 2.1.1, SOFTWARE designed exclusively for use on the Linux or
#     FreeBSD operating systems, or other operating systems derived from the
#     source code to these operating systems, may be copied and
#     redistributed, provided that the binary files thereof are not modified
#     in any way (except for unzipping of compressed files).
#
# Stripping the binary modules would constitute modifying the binary files
# in a way other than unzipping of compressed files.
override_dh_strip:
	# running dh_strip is not permitted by the NVIDIA license


# Generating control files
%:	%.in debian/upstream_info
	perl -p \
	-e 's{#VERSION#}{$(version)}g;' \
	-e 's{#URL_X86#}{$(url_x86)}g;' \
	-e 's{#URL_X86_64#}{$(url_x86_64)}g;' \
	< $< > $@

debian/module/debian/changelog: debian/changelog
	sed 's/^nvidia-graphics-drivers/nvidia-kernel/g' $< > $@

debian/nvidia-libvdpau1-ia32.symbols: debian/nvidia-libvdpau1.symbols.i386
	sed 's/nvidia-libvdpau1/nvidia-libvdpau1-ia32/g' $< > $@

debian/libcuda1-ia32.symbols: debian/libcuda1.symbols
	sed 's/libcuda1/libcuda1-ia32/g' $< > $@

