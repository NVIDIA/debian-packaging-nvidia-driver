#!/bin/sh
set -e


# A trigger that handles the alternatives for /usr/lib32/libGL.so and
# /usr/lib32/libGL.so.1.
if [ "$1" = "triggered" ]; then

	if	[ -L /usr/lib32/nvidia/diversions/libGL.so.1 ] && \
		[ -f /usr/lib32/nvidia/diversions/libGL.so.1 ]
	then
		update-alternatives --install /usr/lib32/libGL.so.1 ia32-libGL.so.1 /usr/lib32/nvidia/diversions/libGL.so.1 5
	else
		update-alternatives --remove ia32-libGL.so.1 /usr/lib32/nvidia/diversions/libGL.so.1
	fi

	if	[ -L /usr/lib32/nvidia/diversions/libGL.so ] && \
		[ -f /usr/lib32/nvidia/diversions/libGL.so ]
	then
		# libgl-mesa-dev was installed, create libGL.so
		update-alternatives --install /usr/lib32/libGL.so ia32-libGL.so /usr/lib32/nvidia/diversions/libGL.so 9995
	else
		# libgl-mesa-dev was removed, drop libGL.so
		update-alternatives --remove ia32-libGL.so /usr/lib32/nvidia/diversions/libGL.so
	fi

fi


#DIVERT_QUIET="--quiet"

# <target: squeeze>
exists()
{
	test -e "$1" || test -L "$1"
}

if [ "$1" = "configure" ]
then

	# dpkg-reconfigure does not set DPKG_MAINTSCRIPT_PACKAGE (#560317)
	if [ -z "$DPKG_MAINTSCRIPT_PACKAGE" ]
	then
		echo "ERROR: DPKG_MAINTSCRIPT_PACKAGE is not set, usually a bug in dpkg-reconfigure"
		exit 1
	fi

	# <target: squeeze>
	if [ -L "/usr/lib32" ] && \
		[ "$(readlink /usr/lib32)" = "/emul/ia32-linux/usr/lib" ]
	then
		echo "ERROR: /usr/lib32 is a symbolic link to /emul/ia32-linux/usr/lib"
		echo "       Please reinstall libc6-i386!"
		echo "       Aborting configuration of $DPKG_MAINTSCRIPT_PACKAGE"
		exit 1
	fi
	# </target: squeeze>

	# <target: wheezy>
	# remove incorrect libGL.so created by an unknown script
	# otherwise we dpkg-divert --rename an unowned file
	if [ -L /usr/lib32/libGL.so ] && \
		[ "$(readlink /usr/lib32/libGL.so)" != "/etc/alternatives/ia32-libGL.so" ] && \
		[ "$(readlink /usr/lib32/libGL.so)" != "libGL.so.1" ]
	then
		echo "Removing /usr/lib/libGL.so symlink from unknown origin."
		rm -f /usr/lib32/libGL.so
	fi
	# </target: wheezy>

	# <target: squeeze>
	# take over diversions from nvidia-glx{,-legacy-*xx}-ia32
	for file in libGL.so.1.2 libGL.so.1 libGL.so
	do
		file_orig="/usr/lib32/$file"
		file_old_divert="/usr/lib32/nvidia/$file.ia32-libs"
		file_new_divert="/usr/lib32/nvidia/diversions/$file"
		old_diverter="`dpkg-divert --listpackage $file_orig`"

		if [ -n "$old_diverter" ] \
			&& [ "$old_diverter" != "$DPKG_MAINTSCRIPT_PACKAGE" ]
		then
			if ! exists "$file_orig" || ! exists "$file_old_divert"
			then
				dpkg-divert --remove --rename --package $old_diverter --divert \
					"$file_old_divert" \
					"$file_orig"
			else
				dpkg-divert --remove --package $old_diverter --divert \
					"$file_old_divert" \
					"$file_orig"
				echo "Moving $file_old_divert to $file_new_divert"
				mv "$file_old_divert" "$file_new_divert"
				dpkg-divert --add --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
					"$file_new_divert" \
					"$file_orig"
			fi
		fi
		if exists "$file_old_divert"
		then
			echo "ERROR: $file_old_divert does still exist. Aborting."
			exit 1
		fi
	done
	# </target: squeeze>

fi
# </target: squeeze>


if [ "$1" = "configure" ]
then

	# <target: squeeze>
	# The old nvidia-glx-ia32 postrm would delete /usr/lib32/nvidia/diversions
	# out from under us, so create it if it doesn't exist.
	test -d /usr/lib32/nvidia/diversions || \
		mkdir -p /usr/lib32/nvidia/diversions
	# </target: squeeze>

	# make new diversions
	dpkg-divert $DIVERT_QUIET --add --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
		/usr/lib32/nvidia/diversions/libGL.so \
		/usr/lib32/libGL.so
	dpkg-divert $DIVERT_QUIET --add --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
		/usr/lib32/nvidia/diversions/libGL.so.1 \
		/usr/lib32/libGL.so.1
	dpkg-divert $DIVERT_QUIET --add --rename --package $DPKG_MAINTSCRIPT_PACKAGE --divert \
		/usr/lib32/nvidia/diversions/libGL.so.1.2 \
		/usr/lib32/libGL.so.1.2

fi


validate_diverted_symlink()
{
	local original diverted target owner filename
	original="$1"
	diverted="$2"
	target="$3"
	filename="$(basename "$original")"

	# determine ownership of the original file
	owner="$(dpkg-query -S "$original" 2>/dev/null | grep -v '^diversion by' || true)"

	if [ -L "$diverted" ] && [ -z "$owner" ]; then
		echo "Removing diverted '$filename' symlink owned by no package."
		rm "$diverted"
	fi

	if [ -L "$diverted" ] && [ "$(readlink "$diverted")" != "$target" ]; then
		echo "Removing diverted '$filename' symlink with unexpected target."
		rm "$diverted"
	fi

	if [ ! -L "$diverted" ] && [ -n "$owner" ]; then
		echo "Restoring diverted '$filename' symlink."
		ln -s "$target" "$diverted"
	fi
}

if [ "$1" = "configure" ]; then

	# do some validation of the diverted libGL.so and libGL.so.1
	validate_diverted_symlink /usr/lib32/libGL.so /usr/lib32/nvidia/diversions/libGL.so libGL.so.1
	validate_diverted_symlink /usr/lib32/libGL.so.1 /usr/lib32/nvidia/diversions/libGL.so.1 libGL.so.1.2

fi


if [ "$1" = "configure" ]; then

	# activate our trigger
	dpkg-trigger /usr/lib32/libGL.so.1
	dpkg-trigger /usr/lib32/libGL.so

fi


#DEBHELPER#

exit 0
