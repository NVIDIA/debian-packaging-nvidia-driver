#!/bin/sh
set -e

. /usr/share/debconf/confmodule

LEGACY_DRIVER="nvidia-legacy-304xx-driver"
LEGACY_PCIIDS="
10DE0040
10DE0041
10DE0042
10DE0043
10DE0044
10DE0045
10DE0046
10DE0047
10DE0048
10DE004E
10DE0090
10DE0091
10DE0092
10DE0093
10DE0095
10DE0098
10DE0099
10DE009D
10DE00C0
10DE00C1
10DE00C2
10DE00C3
10DE00C8
10DE00C9
10DE00CC
10DE00CD
10DE00CE
10DE00F1
10DE00F2
10DE00F3
10DE00F4
10DE00F5
10DE00F6
10DE00F8
10DE00F9
10DE0140
10DE0141
10DE0142
10DE0143
10DE0144
10DE0145
10DE0146
10DE0147
10DE0148
10DE0149
10DE014A
10DE014C
10DE014D
10DE014E
10DE014F
10DE0160
10DE0161
10DE0162
10DE0163
10DE0164
10DE0165
10DE0166
10DE0167
10DE0168
10DE0169
10DE016A
10DE01D0
10DE01D1
10DE01D2
10DE01D3
10DE01D6
10DE01D7
10DE01D8
10DE01DA
10DE01DB
10DE01DC
10DE01DD
10DE01DE
10DE01DF
10DE0221
10DE0222
10DE0240
10DE0241
10DE0242
10DE0244
10DE0245
10DE0247
10DE0290
10DE0291
10DE0292
10DE0293
10DE0294
10DE0295
10DE0297
10DE0298
10DE0299
10DE029A
10DE029B
10DE029C
10DE029D
10DE029E
10DE029F
10DE02E0
10DE02E1
10DE02E2
10DE02E3
10DE02E4
10DE038B
10DE0390
10DE0391
10DE0392
10DE0393
10DE0394
10DE0395
10DE0397
10DE0398
10DE0399
10DE039C
10DE039E
10DE03D0
10DE03D1
10DE03D2
10DE03D5
10DE03D6
10DE0531
10DE0533
10DE053A
10DE053B
10DE053E
10DE07E0
10DE07E1
10DE07E2
10DE07E3
10DE07E5
"

find_unsupported_gpus()
{
	# Check for GPUs that are only supported up to $LEGACY_DRIVER
	if lspci --version > /dev/null 2>&1; then
		lspci -mn \
		| awk '{ gsub("\"",""); if ($2 == "0300") { print $1 " " $3$4 } }' \
		| tr '[:lower:]' '[:upper:]' \
		| while read dev id
		do
			for x in $LEGACY_PCIIDS
			do
				if [ "$x" = "$id" ]; then
					echo "$dev"
					break
				fi
			done
		done
	fi
}


check_for_unsupported_gpus()
{
	# allow to disable the check via preseeding
	db_get nvidia-driver/check-for-unsupported-gpu
	test "$RET" = "true" || return 0

	UNSUPPORTED_DEVICES="$(find_unsupported_gpus)"

	test -n "$UNSUPPORTED_DEVICES" || return 0

	UNSUPPORTED="$(for dev in $UNSUPPORTED_DEVICES ; do lspci -nn -s "$dev" ; done)"

	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists vendor "NVIDIA"
	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists driver "#NVIDIA#-driver"
	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists legacy_driver "$LEGACY_DRIVER"
	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists free_name "Nouveau"
	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists free_driver "xserver-xorg-video-nouveau"
	db_subst nvidia-driver/install-even-if-unsupported-gpu-exists unsupported-device "$UNSUPPORTED"

	# ensure the question is asked again unless it was accepted previously for the same $LEGACY_DRIVER
	db_get nvidia-driver/supported-in-legacy-driver-name
	if [ "$RET" != "$LEGACY_DRIVER" ]; then
		db_reset nvidia-driver/install-even-if-unsupported-gpu-exists
		db_fset nvidia-driver/install-even-if-unsupported-gpu-exists seen false
	fi

	db_input high nvidia-driver/install-even-if-unsupported-gpu-exists || true
	db_go

	echo "*** The following unsupported devices are present in the machine:"
	echo "$UNSUPPORTED"

	db_get nvidia-driver/install-even-if-unsupported-gpu-exists
	if [ "$RET" = "false" ]; then
		echo "Aborting nvidia driver installation."
		exit 1
	fi

	# remember the answer until $LEGACY_DRIVER changes
	db_set nvidia-driver/supported-in-legacy-driver-name "$LEGACY_DRIVER"
}


if [ "$1" = "install" ] || [ "$1" = "upgrade" ]; then

	check_for_unsupported_gpus

fi

#DEBHELPER#
