#!/bin/sh
# postrm script for nvidia-glx
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


# <target: squeeze>
dpkg-maintscript-helper rm_conffile /etc/default/nvidia-glx 195.36.24-1~ -- "$@"
# </target: squeeze>


# Rationale:
#
# Remove our diversions at the remove stage, since even if we have
# configuration files left, we want to put back everything we moved.  Do not
# try to do this again on purge since remove will have already been called,
# and since the rm of /usr/lib/libGL.so will remove someone else's version at
# that point.
#
# In the abort-install case, we may have gotten far enough to create our
# diversions in our preinst, so back out of them.  Don't remove
# /usr/lib/libGL.so, since that may still be owned by another package and
# since we don't create that in preinst.
#
# Leave all of our diversions alone during upgrades or aborted upgrades, since
# we're staying installed in all cases and the diversions are still correct.
#
# It's not clear what to do on disappear, but for now leave everything alone
# and assume that our overwriting package will have logic to take over the
# diversions and doesn't want us messing with them.


case "$1" in
    remove|abort-install)

	dpkg-divert --remove --rename --package nvidia-glx --divert /usr/lib/nvidia/libGL.so.1.xlibmesa /usr/lib/libGL.so.1 > /dev/null
	dpkg-divert --remove --rename --package nvidia-glx --divert /usr/lib/nvidia/libGL.so.1.2.xlibmesa /usr/lib/libGL.so.1.2 > /dev/null

	# work around dpkg-divert bug #581544: useless errors on not writable destination if source does not exist
	if [ -d /usr/lib/nvidia ] && [ ! -d /usr/lib/xorg/modules/extensions ]; then
	    mkdir -p /usr/lib/xorg/modules/extensions
	fi
	
	dpkg-divert --remove --rename --package nvidia-glx --divert /usr/lib/nvidia/libglx.so.xlibmesa /usr/lib/xorg/modules/extensions/libglx.so > /dev/null

	dpkg-divert --remove --rename --package nvidia-glx --divert /usr/lib/nvidia/libGL.so.xlibmesa /usr/lib/libGL.so > /dev/null
	rm -f /usr/lib/xorg/modules/extensions/libglx.so.#VERSION# 2> /dev/null || true
	if [ -d /usr/lib/nvidia ]; then
		rmdir /usr/lib/nvidia/ || true;
	fi

	# work around dpkg-divert bug #581544: useless errors on not writable destination if source does not exist
	rmdir /usr/lib/xorg/modules/extensions /usr/lib/xorg/modules /usr/lib/xorg 2>/dev/null || true

    ;;

    purge|upgrade|failed-upgrade|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
